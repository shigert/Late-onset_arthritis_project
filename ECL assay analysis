# ==============================================================================
# 1. SETUP: Load libraries and data
# ==============================================================================

# Load required libraries
library(ComplexHeatmap)
library(circlize)
library(ggsci)
library(FSA)

# Set random seed for reproducibility
set.seed(123)

mat <- read.csv("ecl.csv", header = TRUE, row.names = 1)

col_metadata <- read.csv("metadataecl.csv", header = TRUE, row.names = 1)


# ==============================================================================
# 2. STATISTICAL ANALYSIS: Perform group comparisons for each variable
# ==============================================================================

row_metadata <- data.frame(
  ACPA_pos_RA_vs_ACPA_neg_RA = numeric(nrow(mat)),
  PMR_vs_ACPA_pos_RA = numeric(nrow(mat)),
  PMR_vs_ACPA_neg_RA = numeric(nrow(mat))
)
rownames(row_metadata) <- rownames(mat)

for (i in 1:nrow(mat)) {

  item_data <- as.numeric(mat[i, ])
  df_test <- data.frame(value = item_data, group = col_metadata$Disease)

  dunn_result <- dunnTest(value ~ group, data = df_test, method = "bh")

  p_values_df <- dunn_result$res

  p_values_map <- setNames(p_values_df$P.adj, gsub(" ", "", p_values_df$Comparison))
  
  comp1 <- "ACPA_pos_RA-ACPA_neg_RA"; comp1_rev <- "ACPA_neg_RA-ACPA_pos_RA"
  comp2 <- "PMR-ACPA_pos_RA";       comp2_rev <- "ACPA_pos_RA-PMR"
  comp3 <- "PMR-ACPA_neg_RA";       comp3_rev <- "ACPA_neg_RA-PMR"

  row_metadata[i, "ACPA_pos_RA_vs_ACPA_neg_RA"] <- ifelse(
    comp1 %in% names(p_values_map), p_values_map[comp1], p_values_map[comp1_rev]
  )
  row_metadata[i, "PMR_vs_ACPA_pos_RA"] <- ifelse(
    comp2 %in% names(p_values_map), p_values_map[comp2], p_values_map[comp2_rev]
  )
  row_metadata[i, "PMR_vs_ACPA_neg_RA"] <- ifelse(
    comp3 %in% names(p_values_map), p_values_map[comp3], p_values_map[comp3_rev]
  )
}


# ==============================================================================
# 3. DATA PREPARATION FOR HEATMAP
# ==============================================================================

mat_scaled_transposed <- scale(t(mat))

# --- Reorder the matrix rows (samples) based on disease group ---

desired_order <- c("ACPA_pos_RA", "ACPA_neg_RA", "PMR")

col_metadata$Disease <- factor(col_metadata$Disease, levels = desired_order)

row_order_index <- order(col_metadata$Disease)

mat_scaled_transposed_ordered <- mat_scaled_transposed[row_order_index, ]
col_metadata_ordered <- col_metadata[row_order_index, , drop = FALSE]


# ==============================================================================
# 4. HEATMAP VISUALIZATION
# ==============================================================================

# --- Create annotations and define colors ---
group_colors <- setNames(
  adjustcolor(pal_jama()(3), alpha.f = 0.6),
  c("ACPA_pos_RA", "ACPA_neg_RA", "PMR")
)

left_annotation <- rowAnnotation(
  Group = col_metadata_ordered$Disease,
  col = list(Group = group_colors),
  show_annotation_name = FALSE,
  annotation_legend_param = list(
    Group = list(
      title_gp = gpar(fontsize = 8),
      labels_gp = gpar(fontsize = 8),
      labels = c("ACPA+RA", "ACPA-RA", "PMR")
    )
  )
)

col_fun <- colorRamp2(c(-2.5, 0, 2.5), c("dodgerblue", "white", "red"))

# --- Generate the Heatmap object ---
ht <- Heatmap(
  mat_scaled_transposed_ordered,
  name = "Expression", # Legend title
  
  show_row_names = FALSE,
  cluster_rows = FALSE, 
  row_split = col_metadata_ordered$Disease, 
  row_title = NULL,
  left_annotation = left_annotation,
  
  show_column_names = TRUE,
  cluster_columns = TRUE, # Cluster the variables
  column_names_gp = gpar(fontsize = 6),
  column_names_rot = 45,
  column_dend_height = unit(5, "mm"),
  
  col = col_fun,
  heatmap_legend_param = list(
    title_gp = gpar(fontsize = 8),
    labels_gp = gpar(fontsize = 8)
  )
)

# --- Draw the heatmap and save to a PDF file ---
pdf("Figure1D.pdf", width = 7, height = 4)

draw(
  ht,
  heatmap_legend_side = "left",
  annotation_legend_side = "bottom"
)

dev.off()
